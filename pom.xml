<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>org.manusmith</groupId>
  <artifactId>manusmith-shell</artifactId>
  <version>2.0.0</version>
  <name>ManuSmith Shell</name>
  <description>Professional manuscript formatting and document processing application</description>
  <url>https://github.com/APorkolab/manusmith-shell</url>
  
  <developers>
    <developer>
      <name>A. Porkolab</name>
      <email>aporkolab@example.com</email>
    </developer>
  </developers>
  
  <properties>
    <maven.compiler.source>21</maven.compiler.source>
    <maven.compiler.target>21</maven.compiler.target>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <javafx.version>22.0.2</javafx.version>
    <junit.version>5.11.0</junit.version>
    <logback.version>1.4.14</logback.version>
    <slf4j.version>2.0.9</slf4j.version>
    <mockito.version>5.8.0</mockito.version>
    <testfx.version>4.0.17</testfx.version>
    <picocli.version>4.7.5</picocli.version>
    <jackson.version>2.16.1</jackson.version>
    <micrometer.version>1.12.1</micrometer.version>
    <dependency-check.version>10.0.4</dependency-check.version>
  </properties>
  <dependencies>
    <!-- JavaFX platform-specific dependencies for compilation (Mac) -->
    <dependency>
      <groupId>org.openjfx</groupId>
      <artifactId>javafx-base</artifactId>
      <version>${javafx.version}</version>
      <classifier>mac-aarch64</classifier>
    </dependency>
    <dependency>
      <groupId>org.openjfx</groupId>
      <artifactId>javafx-graphics</artifactId>
      <version>${javafx.version}</version>
      <classifier>mac-aarch64</classifier>
    </dependency>
    <dependency>
      <groupId>org.openjfx</groupId>
      <artifactId>javafx-controls</artifactId>
      <version>${javafx.version}</version>
      <classifier>mac-aarch64</classifier>
    </dependency>
    <dependency>
      <groupId>org.openjfx</groupId>
      <artifactId>javafx-fxml</artifactId>
      <version>${javafx.version}</version>
      <classifier>mac-aarch64</classifier>
    </dependency>
    
    <!-- Additional JavaFX platform-specific runtime libraries for cross-platform packaging -->
    <dependency>
      <groupId>org.openjfx</groupId>
      <artifactId>javafx-base</artifactId>
      <version>${javafx.version}</version>
      <classifier>mac</classifier>
      <scope>runtime</scope>
    </dependency>
    <dependency>
      <groupId>org.openjfx</groupId>
      <artifactId>javafx-graphics</artifactId>
      <version>${javafx.version}</version>
      <classifier>mac</classifier>
      <scope>runtime</scope>
    </dependency>
    <dependency>
      <groupId>org.openjfx</groupId>
      <artifactId>javafx-controls</artifactId>
      <version>${javafx.version}</version>
      <classifier>mac</classifier>
      <scope>runtime</scope>
    </dependency>
    <dependency>
      <groupId>org.openjfx</groupId>
      <artifactId>javafx-fxml</artifactId>
      <version>${javafx.version}</version>
      <classifier>mac</classifier>
      <scope>runtime</scope>
    </dependency>
    <dependency>
      <groupId>org.openjfx</groupId>
      <artifactId>javafx-base</artifactId>
      <version>${javafx.version}</version>
      <classifier>win</classifier>
      <scope>runtime</scope>
    </dependency>
    <dependency>
      <groupId>org.openjfx</groupId>
      <artifactId>javafx-graphics</artifactId>
      <version>${javafx.version}</version>
      <classifier>win</classifier>
      <scope>runtime</scope>
    </dependency>
    <dependency>
      <groupId>org.openjfx</groupId>
      <artifactId>javafx-controls</artifactId>
      <version>${javafx.version}</version>
      <classifier>win</classifier>
      <scope>runtime</scope>
    </dependency>
    <dependency>
      <groupId>org.openjfx</groupId>
      <artifactId>javafx-fxml</artifactId>
      <version>${javafx.version}</version>
      <classifier>win</classifier>
      <scope>runtime</scope>
    </dependency>
    <dependency>
      <groupId>org.openjfx</groupId>
      <artifactId>javafx-base</artifactId>
      <version>${javafx.version}</version>
      <classifier>linux</classifier>
      <scope>runtime</scope>
    </dependency>
    <dependency>
      <groupId>org.openjfx</groupId>
      <artifactId>javafx-graphics</artifactId>
      <version>${javafx.version}</version>
      <classifier>linux</classifier>
      <scope>runtime</scope>
    </dependency>
    <dependency>
      <groupId>org.openjfx</groupId>
      <artifactId>javafx-controls</artifactId>
      <version>${javafx.version}</version>
      <classifier>linux</classifier>
      <scope>runtime</scope>
    </dependency>
    <dependency>
      <groupId>org.openjfx</groupId>
      <artifactId>javafx-fxml</artifactId>
      <version>${javafx.version}</version>
      <classifier>linux</classifier>
      <scope>runtime</scope>
    </dependency>

    <!-- Apache POI for shell's own DOCX processing services -->
    <dependency>
        <groupId>org.apache.poi</groupId>
        <artifactId>poi-ooxml</artifactId>
        <version>5.4.0</version>
    </dependency>
    
    <!-- Other document processing dependencies are provided by manusmith-engine -->

    <!-- Logging -->
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
      <version>${slf4j.version}</version>
    </dependency>
    <dependency>
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-classic</artifactId>
      <version>${logback.version}</version>
    </dependency>
    
    <!-- Configuration Management -->
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-databind</artifactId>
      <version>${jackson.version}</version>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.dataformat</groupId>
      <artifactId>jackson-dataformat-yaml</artifactId>
      <version>${jackson.version}</version>
    </dependency>
    
    <!-- CLI Support -->
    <dependency>
      <groupId>info.picocli</groupId>
      <artifactId>picocli</artifactId>
      <version>${picocli.version}</version>
    </dependency>
    
    <!-- Metrics and Monitoring -->
    <dependency>
      <groupId>io.micrometer</groupId>
      <artifactId>micrometer-core</artifactId>
      <version>${micrometer.version}</version>
    </dependency>
    <dependency>
      <groupId>io.micrometer</groupId>
      <artifactId>micrometer-registry-jmx</artifactId>
      <version>${micrometer.version}</version>
    </dependency>

    <!-- Validation -->
    <dependency>
      <groupId>org.hibernate.validator</groupId>
      <artifactId>hibernate-validator</artifactId>
      <version>8.0.1.Final</version>
    </dependency>
    <dependency>
      <groupId>org.glassfish</groupId>
      <artifactId>jakarta.el</artifactId>
      <version>4.0.2</version>
    </dependency>

    <!-- ManuSmith Engine with ODT support -->
    <dependency>
      <groupId>org.manusmith</groupId>
      <artifactId>manusmith-engine-plugin</artifactId>
            <version>2.0.0</version>
    </dependency>
    
    <!-- Testing -->
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter</artifactId>
      <version>${junit.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-core</artifactId>
      <version>${mockito.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-junit-jupiter</artifactId>
      <version>${mockito.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.testfx</groupId>
      <artifactId>testfx-core</artifactId>
      <version>${testfx.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.testfx</groupId>
      <artifactId>testfx-junit5</artifactId>
      <version>${testfx.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.assertj</groupId>
      <artifactId>assertj-core</artifactId>
      <version>3.25.1</version>
      <scope>test</scope>
    </dependency>
    <!-- Headless JavaFX testing - modern approach -->
    <dependency>
      <groupId>org.openjfx</groupId>
      <artifactId>javafx-swing</artifactId>
      <version>${javafx.version}</version>
      <scope>test</scope>
    </dependency>
    <!-- TestFX Monocle for headless CI/CD testing -->
    <dependency>
      <groupId>org.testfx</groupId>
      <artifactId>openjfx-monocle</artifactId>
      <version>21.0.2</version>
      <scope>test</scope>
    </dependency>
  </dependencies>
  <build>
    <plugins>
      <!-- Compiler -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.13.0</version>
        <configuration>
          <source>21</source>
          <target>21</target>
          <compilerArgs>
            <arg>-Xlint:deprecation</arg>
            <arg>-Xlint:unchecked</arg>
            <arg>-parameters</arg>
          </compilerArgs>
        </configuration>
      </plugin>
      
      <!-- Surefire -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>3.5.0</version>
        <configuration>
          <useModulePath>false</useModulePath>
          <systemPropertyVariables>
            <testfx.robot>glass</testfx.robot>
            <testfx.headless>true</testfx.headless>
            <prism.order>sw</prism.order>
            <prism.text>t2k</prism.text>
            <prism.lcdtext>false</prism.lcdtext>
            <prism.subpixeltext>false</prism.subpixeltext>
            <glass.platform>Monocle</glass.platform>
            <monocle.platform>Headless</monocle.platform>
            <java.awt.headless>true</java.awt.headless>
          </systemPropertyVariables>
          <argLine>
            --add-opens javafx.graphics/com.sun.javafx.application=ALL-UNNAMED
            --add-opens javafx.graphics/com.sun.glass.ui=ALL-UNNAMED
            --add-exports javafx.graphics/com.sun.glass.ui=ALL-UNNAMED
            --add-opens javafx.graphics/com.sun.glass.ui.monocle=ALL-UNNAMED
            --add-exports javafx.graphics/com.sun.glass.ui.monocle=ALL-UNNAMED
          </argLine>
        </configuration>
      </plugin>
      
      <!-- Failsafe for integration tests -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-failsafe-plugin</artifactId>
        <version>3.5.0</version>
        <executions>
          <execution>
            <goals>
              <goal>integration-test</goal>
              <goal>verify</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      
      <!-- JaCoCo for code coverage -->
      <plugin>
        <groupId>org.jacoco</groupId>
        <artifactId>jacoco-maven-plugin</artifactId>
        <version>0.8.11</version>
        <executions>
          <execution>
            <goals>
              <goal>prepare-agent</goal>
            </goals>
          </execution>
          <execution>
            <id>report</id>
            <phase>test</phase>
            <goals>
              <goal>report</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      
      <!-- SpotBugs for static analysis -->
      <plugin>
        <groupId>com.github.spotbugs</groupId>
        <artifactId>spotbugs-maven-plugin</artifactId>
        <version>4.8.2.0</version>
        <configuration>
          <effort>Max</effort>
          <threshold>Low</threshold>
          <failOnError>false</failOnError>
          <skip>${spotbugs.skip}</skip>
          <excludeFilterFile>spotbugs-exclude.xml</excludeFilterFile>
        </configuration>
        <executions>
          <execution>
            <goals>
              <goal>check</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      
      <!-- JavaFX futtatáshoz (dev): mvn -Prun-javafx javafx:run -->
      <plugin>
        <groupId>org.openjfx</groupId>
        <artifactId>javafx-maven-plugin</artifactId>
        <version>0.0.8</version>
        <configuration>
          <mainClass>org.manusmith.shell.MainApp</mainClass>
          <launcher>ManuSmith</launcher>
          <commandlineArgs>-Djava.awt.headless=false -Dprism.order=sw -Dprism.verbose=true -Djavafx.animation.fullspeed=true</commandlineArgs>
        </configuration>
      </plugin>
      
      <!-- JavaDoc generation -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-javadoc-plugin</artifactId>
        <version>3.6.3</version>
        <executions>
          <execution>
            <id>attach-javadocs</id>
            <goals>
              <goal>jar</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      
      <!-- Source JAR generation -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-source-plugin</artifactId>
        <version>3.3.0</version>
        <executions>
          <execution>
            <id>attach-sources</id>
            <goals>
              <goal>jar</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      
      <!-- Application packaging -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-assembly-plugin</artifactId>
        <version>3.6.0</version>
        <configuration>
          <descriptorRefs>
            <descriptorRef>jar-with-dependencies</descriptorRef>
          </descriptorRefs>
          <archive>
            <manifest>
              <mainClass>org.manusmith.shell.MainApp</mainClass>
            </manifest>
          </archive>
        </configuration>
        <executions>
          <execution>
            <id>make-assembly</id>
            <phase>package</phase>
            <goals>
              <goal>single</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      
      <!-- OWASP Dependency Check for security scanning -->
      <plugin>
        <groupId>org.owasp</groupId>
        <artifactId>dependency-check-maven</artifactId>
        <version>${dependency-check.version}</version>
        <configuration>
          <!-- NVD API Key will be provided via -Dnvd.api.key system property -->
          <nvdApiKeyEnvironmentVariable>NVD_API_KEY</nvdApiKeyEnvironmentVariable>
          <nvdApiDelay>2000</nvdApiDelay>
          <nvdMaxRetryCount>10</nvdMaxRetryCount>
          <nvdValidForHours>24</nvdValidForHours>
          
          <!-- Output formats -->
          <formats>
            <format>HTML</format>
            <format>JSON</format>
            <format>XML</format>
          </formats>
          
          <!-- Performance optimizations -->
          <centralAnalyzerEnabled>true</centralAnalyzerEnabled>
          <archiveAnalyzerEnabled>false</archiveAnalyzerEnabled>
          <assemblyAnalyzerEnabled>false</assemblyAnalyzerEnabled>
          <jarAnalyzerEnabled>true</jarAnalyzerEnabled>
          <nodeAnalyzerEnabled>false</nodeAnalyzerEnabled>
          <retireJsAnalyzerEnabled>false</retireJsAnalyzerEnabled>
          
          <!-- Fail build settings -->
          <failBuildOnCVSS>8</failBuildOnCVSS>
          <failBuildOnAnyVulnerability>false</failBuildOnAnyVulnerability>
          
          <!-- Suppression file for false positives -->
          <suppressionFiles>
            <suppressionFile>dependency-check-suppressions.xml</suppressionFile>
          </suppressionFiles>
        </configuration>
      </plugin>
      
      <!-- ProGuard for code obfuscation (disabled in Maven, handled by build scripts) -->
      <!-- 
      <plugin>
        <groupId>com.github.wvengen</groupId>
        <artifactId>proguard-maven-plugin</artifactId>
        <version>2.6.0</version>
        <executions>
          <execution>
            <id>obfuscate</id>
            <phase>none</phase>
            <goals>
              <goal>proguard</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      -->
    </plugins>
  </build>
  <profiles>
    <profile>
      <id>run-javafx</id>
      <properties>
        <!--
          Set this property to your current platform.
          Common values: linux, win, mac-aarch64
          Run with: mvn -Prun-javafx javafx:run
        -->
        <javafx.platform>mac-aarch64</javafx.platform>
      </properties>
      <dependencies>
        <dependency>
          <groupId>org.openjfx</groupId>
          <artifactId>javafx-controls</artifactId>
          <version>${javafx.version}</version>
          <classifier>${javafx.platform}</classifier>
        </dependency>
        <dependency>
          <groupId>org.openjfx</groupId>
          <artifactId>javafx-fxml</artifactId>
          <version>${javafx.version}</version>
          <classifier>${javafx.platform}</classifier>
        </dependency>
      </dependencies>
    </profile>
    
    <!-- Windows native packaging -->
    <profile>
      <id>windows-package</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.panteleyev</groupId>
            <artifactId>jpackage-maven-plugin</artifactId>
            <version>1.6.5</version>
            <executions>
              <execution>
                <id>windows-msi</id>
                <phase>install</phase>
                <goals>
                  <goal>jpackage</goal>
                </goals>
                <configuration>
                  <name>ManuSmith Shell</name>
                  <appVersion>2.0.0</appVersion>
                  <vendor>ManuSmith</vendor>
                  <copyright>© 2025 ManuSmith. All rights reserved.</copyright>
                  <description>Professional manuscript processing tool with ODT support</description>
                  <mainClass>org.manusmith.shell.MainApp</mainClass>
                  <mainJar>${project.build.finalName}-obfuscated.jar</mainJar>
                  <type>MSI</type>
                  <input>${project.build.directory}</input>
                  <destination>${project.build.directory}/dist</destination>
                  <winMenu>true</winMenu>
                  <winShortcut>true</winShortcut>
                  <winShortcutPrompt>true</winShortcutPrompt>
                  <winMenuGroup>ManuSmith</winMenuGroup>
                  <winDirChooser>true</winDirChooser>
                  <winUpgradeUuid>12345678-1234-1234-1234-123456789012</winUpgradeUuid>
                  <javaOptions>
                    <option>-Xmx2048m</option>
                    <option>-Djava.awt.headless=false</option>
                    <option>--add-exports=javafx.graphics/com.sun.javafx.application=ALL-UNNAMED</option>
                  </javaOptions>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    
    <!-- macOS native packaging -->
    <profile>
      <id>macos-package</id>
      <properties>
        <javafx.platform>mac-aarch64</javafx.platform>
      </properties>
      <dependencies>
        <dependency>
          <groupId>org.openjfx</groupId>
          <artifactId>javafx-controls</artifactId>
          <version>${javafx.version}</version>
          <classifier>${javafx.platform}</classifier>
        </dependency>
        <dependency>
          <groupId>org.openjfx</groupId>
          <artifactId>javafx-fxml</artifactId>
          <version>${javafx.version}</version>
          <classifier>${javafx.platform}</classifier>
        </dependency>
        <dependency>
          <groupId>org.openjfx</groupId>
          <artifactId>javafx-base</artifactId>
          <version>${javafx.version}</version>
          <classifier>${javafx.platform}</classifier>
        </dependency>
        <dependency>
          <groupId>org.openjfx</groupId>
          <artifactId>javafx-graphics</artifactId>
          <version>${javafx.version}</version>
          <classifier>${javafx.platform}</classifier>
        </dependency>
      </dependencies>
      <build>
        <plugins>
          <plugin>
            <groupId>org.panteleyev</groupId>
            <artifactId>jpackage-maven-plugin</artifactId>
            <version>1.6.5</version>
            <executions>
              <execution>
                <id>mac-dmg</id>
                <phase>install</phase>
                <goals>
                  <goal>jpackage</goal>
                </goals>
                <configuration>
                  <name>ManuSmith Shell</name>
                  <appVersion>2.0.0</appVersion>
                  <vendor>ManuSmith</vendor>
                  <copyright>© 2025 ManuSmith. All rights reserved.</copyright>
                  <description>Professional manuscript processing tool with ODT support</description>
                  <mainClass>org.manusmith.shell.MainApp</mainClass>
                  <mainJar>${project.build.finalName}-jar-with-dependencies.jar</mainJar>
                  <type>DMG</type>
                  <input>${project.build.directory}</input>
                  <destination>${project.build.directory}/dist</destination>
                  <runtimeImage>${java.home}</runtimeImage>
                  <macPackageName>org.manusmith.shell</macPackageName>
                  <macPackageIdentifier>org.manusmith.shell</macPackageIdentifier>
                  <macPackageSigningPrefix>org.manusmith</macPackageSigningPrefix>
                  <macSign>false</macSign>
                  <macBundleName>ManuSmith Shell</macBundleName>
                  <macAppCategory>public.app-category.productivity</macAppCategory>
                  <javaOptions>
                    <option>-Xmx2048m</option>
                    <option>-Djava.awt.headless=false</option>
                    <option>-Dapple.awt.UIElement=false</option>
                    <option>-Dapple.laf.useScreenMenuBar=true</option>
                    <option>-Xdock:name=ManuSmith Shell</option>
                    <option>-Dcom.apple.macos.useScreenMenuBar=true</option>
                    <option>-Dprism.order=d3d,es2,sw</option>
                    <option>-Dprism.verbose=false</option>
                    <option>-Djavafx.animation.fullspeed=false</option>
                    <option>-Dprism.allowhidpi=false</option>
                    <option>-Dprism.maxvram=512m</option>
                    <option>-Dglass.accessible.force=false</option>
                  </javaOptions>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
</project>
