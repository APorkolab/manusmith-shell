name: ManuSmith Shell CI/CD

on:
  push:
    branches: [ main, develop ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: write
  packages: read
  actions: read
  checks: write
  pull-requests: write
  security-events: write
  statuses: write

env:
  JAVA_VERSION: '21'
  ENGINE_VERSION: '2.0.0'
  
jobs:
  test:
    name: Test Suite
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout Shell Repository
      uses: actions/checkout@v4
    
    - name: Set up JDK ${{ env.JAVA_VERSION }}
      uses: actions/setup-java@v4
      with:
        java-version: ${{ env.JAVA_VERSION }}
        distribution: 'temurin'
        
    - name: Cache Maven Dependencies
      uses: actions/cache@v4
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2

    - name: Install ManuSmith Engine Dependency
      run: |
        git clone https://github.com/APorkolab/manusmith-engine.git
        cd manusmith-engine
        mvn clean install -DskipTests -Dspotbugs.skip=true -Ddependency-check.skip=true -Djpackage.skip=true -q
        echo "‚úÖ ManuSmith Engine ${{ env.ENGINE_VERSION }} installed"

    - name: Run Tests
      run: |
        mvn clean test
        echo "‚úÖ All tests completed"

    - name: Generate Test Reports
      uses: dorny/test-reporter@v1
      if: success() || failure()
      with:
        name: Unit Test Results
        path: target/surefire-reports/*.xml
        reporter: java-junit

  build-cross-platform:
    name: Build Native Packages
    needs: test
    if: github.ref == 'refs/heads/main' && github.event_name == 'push' || github.event_name == 'workflow_dispatch' || startsWith(github.ref, 'refs/tags/')
    strategy:
      matrix:
        include:
          - os: macos-latest
            platform: 'macOS'
            build_script: './build-macos.sh'
            artifact_pattern: '*.dmg'
            artifact_name: 'ManuSmith-Shell-macOS'
          - os: windows-latest  
            platform: 'Windows'
            build_script: 'build-windows.bat'
            artifact_pattern: '*.msi'
            artifact_name: 'ManuSmith-Shell-Windows'
    
    runs-on: ${{ matrix.os }}
    
    steps:
    - name: Checkout Shell Repository
      uses: actions/checkout@v4
    
    - name: Set up JDK ${{ env.JAVA_VERSION }}
      uses: actions/setup-java@v4
      with:
        java-version: ${{ env.JAVA_VERSION }}
        distribution: 'temurin'
        
    - name: Cache Maven Dependencies
      uses: actions/cache@v4
      with:
        path: ~/.m2
        key: ${{ matrix.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ matrix.os }}-m2

    - name: Install ManuSmith Engine Dependency
      shell: bash
      run: |
        git clone https://github.com/APorkolab/manusmith-engine.git
        cd manusmith-engine
        mvn clean install -DskipTests -Dspotbugs.skip=true -Ddependency-check.skip=true -Djpackage.skip=true -q
        echo "‚úÖ ManuSmith Engine installed for ${{ matrix.platform }}"

    - name: Install WiX Toolset (Windows only)
      if: matrix.os == 'windows-latest'
      run: |
        choco install wixtoolset -y
        echo "‚úÖ WiX Toolset installed"

    - name: Build Native Package for ${{ matrix.platform }}
      shell: bash
      run: |
        echo "üöÄ Building native installer for ${{ matrix.platform }}..."
        ${{ matrix.build_script }}
        echo "‚úÖ Build completed for ${{ matrix.platform }}"

    - name: Upload Native Package
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.artifact_name }}-v${{ github.run_number }}
        path: |
          target/dist/${{ matrix.artifact_pattern }}
          target/*-obfuscated.jar
        retention-days: 90
        if-no-files-found: error

    - name: Verify Package Creation
      shell: bash
      run: |
        echo "üì¶ Checking created packages:"
        ls -la target/dist/ || echo "No dist directory"
        ls -la target/*.jar || echo "No JAR files"
        echo "‚úÖ Package verification completed"

  release:
    name: Create Release with Native Installers
    needs: build-cross-platform
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push' || startsWith(github.ref, 'refs/tags/')
    
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4
    
    - name: Download macOS Package
      uses: actions/download-artifact@v4
      with:
        name: ManuSmith-Shell-macOS-v${{ github.run_number }}
        path: ./release-assets/
    
    - name: Download Windows Package  
      uses: actions/download-artifact@v4
      with:
        name: ManuSmith-Shell-Windows-v${{ github.run_number }}
        path: ./release-assets/
    
    - name: List Release Assets
      run: |
        echo "üìã Release assets prepared:"
        find ./release-assets -type f -name "*.dmg" -o -name "*.msi" -o -name "*-obfuscated.jar" | sort
        echo "Total files: $(find ./release-assets -type f | wc -l)"
    
    - name: Extract Version
      id: version
      run: |
        if [[ "${{ github.ref }}" == refs/tags/* ]]; then
          VERSION=${GITHUB_REF#refs/tags/}
        else
          VERSION="v${{ github.run_number }}"
        fi
        echo "version=$VERSION" >> $GITHUB_OUTPUT
        echo "üìå Release version: $VERSION"
    
    - name: Create GitHub Release
      id: create_release
      uses: softprops/action-gh-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.version.outputs.version }}
        name: ManuSmith Shell ${{ steps.version.outputs.version }}
        draft: false
        prerelease: ${{ !startsWith(github.ref, 'refs/tags/') }}
        generate_release_notes: false
        body: |
          ## üéâ ManuSmith Shell Release ${{ steps.version.outputs.version }}
          
          ### üî• What's New
          - **Native Desktop Applications**: Ready-to-install packages for macOS and Windows
          - **Full ODT Support**: Complete OpenDocument Text file processing capabilities  
          - **ProGuard Obfuscation**: Enhanced security with obfuscated bytecode
          - **ManuSmith Engine v${{ env.ENGINE_VERSION }}**: Latest engine integration
          
          ### üì¶ Download Options
          
          **macOS Users:**
          - Download `ManuSmith-Shell-${{ steps.version.outputs.version }}.dmg`
          - Double-click to mount, then drag to Applications folder
          
          **Windows Users:**
          - Download `ManuSmith-Shell-${{ steps.version.outputs.version }}.msi`  
          - Run installer with administrator privileges
          
          **Advanced Users:**
          - JAR files available for custom deployment scenarios
          
          ### ‚ö° Key Features
          - Modern JavaFX user interface
          - Document conversion between multiple formats
          - Advanced typography and formatting tools
          - Cross-platform compatibility
          - Built-in security and performance optimizations
          
          ### üõ†Ô∏è Technical Details
          - Java Runtime: OpenJDK ${{ env.JAVA_VERSION }}
          - Engine Version: v${{ env.ENGINE_VERSION }}
          - Build: #${{ github.run_number }}
          - Commit: ${{ github.sha }}
        files: |
          ./release-assets/target/dist/*.dmg
          ./release-assets/target/dist/*.msi
          ./release-assets/target/*-obfuscated.jar
    
    - name: Release Summary
      run: |
        echo "üéä Release ${{ steps.version.outputs.version }} created successfully!"
        echo "üì• Download URL: ${{ steps.create_release.outputs.url }}"
        echo "üè∑Ô∏è  Release ID: ${{ steps.create_release.outputs.id }}"
        echo "üì¶ Assets uploaded: DMG, MSI, and obfuscated JARs"
        echo "‚úÖ CI/CD Pipeline completed successfully"

  security-scan:
    name: Security Analysis
    needs: test
    runs-on: ubuntu-latest
    if: github.event_name != 'pull_request'
    
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4
    
    - name: Set up JDK ${{ env.JAVA_VERSION }}
      uses: actions/setup-java@v4
      with:
        java-version: ${{ env.JAVA_VERSION }}
        distribution: 'temurin'
        
    - name: Cache Maven Dependencies
      uses: actions/cache@v4
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2

    - name: Install ManuSmith Engine Dependency
      run: |
        git clone https://github.com/APorkolab/manusmith-engine.git
        cd manusmith-engine
        mvn clean install -DskipTests -Dspotbugs.skip=true -Ddependency-check.skip=true -Djpackage.skip=true -q
        echo "‚úÖ ManuSmith Engine installed for security scan"

    - name: Run OWASP Dependency Check
      run: |
        mvn clean compile
        mvn org.owasp:dependency-check-maven:check -Dformat=ALL || true
        echo "üîç Security scan completed"
        
    - name: Upload Security Report
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: security-report-${{ github.run_number }}
        path: |
          target/dependency-check-report.html
          target/dependency-check-report.json
          target/dependency-check-report.xml
        retention-days: 30
        if-no-files-found: warn
